(() => { "use strict"; function t(t, e) { const o = "data-outside", s = document.documentElement; function n(i) { e.contains(i.target) || (t(), s.removeEventListener("click", n), e.removeAttribute(o)) } null === e.getAttribute(o) && (setTimeout((() => { s.addEventListener("click", n) })), e.setAttribute(o, "")) } const e = new class { constructor(t, e) { this.options = void 0 === e ? { block: "start", behavior: "smooth" } : e, this.navItems = document.querySelectorAll(t), this.scrollToSection = this.scrollToSection.bind(this) } scrollToSection() { this.navItems.forEach((t => { const e = t.getAttribute("href"); t.addEventListener("click", (t => { t.preventDefault(), document.querySelector(`${e}`).scrollIntoView(this.options) })) })) } init() { return this.navItems.length || this.navItems.forEach((t => { t.addEventListener("click", this.scrollToSection) })), null } }('a[href^="#"]'), o = new class { constructor(t) { this.faqList = document.querySelectorAll(t) } faqMake() { this.faqList.forEach((t => { const e = t.nextElementSibling; t.addEventListener("click", (() => { e.classList.toggle("showDD") })) })) } initAcordiao() { console.log(this.faqList[0].nextElementSibling.outerHTML.startsWith("<dd")), this.faqList[0].outerHTML.startsWith("<dt>") && this.faqList[0].nextElementSibling.outerHTML.startsWith("<dd") ? this.faqMake() : console.log("voce deve ter um dl seguida por um dt, o elemeto passado nao corresponde a esses parametros") } }(".faq-lista dt"), s = new class { constructor() { this.ModalAbrir = document.querySelector('[data-modal="abrir"]'), this.ModalCOntainer = document.querySelector("[data-modal='container']"), this.ModalFechar = document.querySelector('[data-modal="fechar"]'), this.Form = document.querySelector(".modal form"), this.ShowSenha = document.querySelector(".ShowSenha input"), this.senhaInput = document.querySelector('input[type="password"]'), this.eventToggleModal = this.eventToggleModal.bind(this), this.showSenha = this.showSenha.bind(this), this.clickForaModal = this.clickForaModal.bind(this) } abriModal(t) { t.preventDefault(), this.ModalCOntainer.classList.add("ativo") } fecharModal(t) { t.preventDefault(), this.ModalCOntainer.classList.remove("ativo") } toggleModal() { this.ModalCOntainer.classList.toggle("ativo") } eventToggleModal(t) { t.preventDefault(), console.log(this), this.toggleModal() } clickForaModal(t) { console.log(this.ModalCOntainer), t.target === this.ModalCOntainer && this.ModalCOntainer.classList.remove("ativo") } showSenha() { console.log(this.senhaInput), this.ShowSenha.checked ? this.senhaInput.setAttribute("type", "text") : this.senhaInput.setAttribute("type", "password") } EventListeners() { this.ModalCOntainer.addEventListener("click", this.clickForaModal), this.ModalAbrir.addEventListener("click", this.eventToggleModal), this.ModalFechar.addEventListener("click", this.eventToggleModal), this.Form.addEventListener("submit", this.fecharModal), this.ShowSenha.addEventListener("click", this.showSenha) } init() { this.ModalCOntainer && this.ModalFechar && this.ModalAbrir && this.EventListeners() } }; !function () { const e = document.querySelector('[data-menu="lista"]'), o = document.querySelector('[data-menu="button"]'); t((() => { e.classList.remove("active"), o.classList.remove("active") }), e), o.addEventListener("click", (function () { e.classList.toggle("active"), o.classList.toggle("active") })) }(), o.initAcordiao(), e.init(), s.init(), function () { const t = document.querySelectorAll(".js-scroll"), e = 70 * window.innerHeight / 100; window.addEventListener("scroll", (() => { t.forEach((t => { const { top: o } = t.getBoundingClientRect(); o < e ? t.classList.add("ativo") : t.classList.contains("ativo") && t.classList.remove("ativo") })) })) }(), function () { const t = document.querySelectorAll('[data-animais="desc"] section'); function e(e) { t.forEach((t => t.classList.remove("ativo-descAnimals"))); const o = document.querySelector(`#${e}`), s = o.dataset.anime; o.classList.add("ativo-descAnimals", s) } document.querySelectorAll('img[src^="img/imagem"]').forEach((t => { t.addEventListener("click", (() => { e(t.getAttribute("class")) })) })), e("raposa") }(), async function () { const t = document.querySelector(".BitCoin span"), e = await fetch("https://blockchain.info/ticker"), o = +(await e.json()).BRL.sell; t.innerText = `${(1e3 / o).toFixed(3)}R$` }(), function () { const t = document.querySelectorAll("[data-tollTip='Tolltip']"), e = { handleEvent(t) { console.log(this.tolltip), this.tolltip.style.top = `${t.pageY + 20} px`, this.tolltip.style.left = `${t.pageX + 20} px` } }, o = { handleEvent() { this.tollTipBox.remove(), this.elemento.removeEventListener("mouseleave", o), this.elemento.removeEventListener("mousemove", e) } }; function s() { const t = function (t) { const e = document.createElement("div"), o = t.getAttribute("aria-label"); return e.classList.add("TollTip"), e.innerHTML = o, document.body.appendChild(e), e }(this); e.tolltip = t, this.addEventListener("mousemove", e), o.tollTipBox = t, o.elemento = this, this.addEventListener("mouseleave", o) } t.forEach((t => { t.addEventListener("mouseover", s) })) }(), function () { const e = document.querySelectorAll("[data-dropDown]"), o = ["click", "touchstart"]; function s(e) { e.preventDefault(), this.classList.add("ativoSubMenu"), t((() => this.classList.remove("ativoSubMenu")), this) } e.forEach((t => { o.forEach((e => t.addEventListener(e, s))) })) }(), function () { let t; t = new MutationObserver((function (e) { e[0].target.classList.contains("ativo") && (t.disconnect(), document.querySelectorAll(".numero-animal span").forEach((t => { const e = +t.innerText; let o = 0; const s = e / 100, n = setInterval((() => { t.innerText = o.toFixed(0), o += s, o > e && clearInterval(n) }), 10) }))) })); const e = document.querySelector(".numeros"); t.observe(e, { attributes: !0 }) }(), function () { const t = document.querySelector(".dados"), e = document.querySelector("[data-Semana]"), o = e.dataset.semana.split(",").map((t => +t)), s = e.dataset.horario.split(",").map((t => +t)), n = new Date, i = n.getDay(), a = n.getHours(); o.includes(i) && a >= s[0] && a < s[1] ? t.classList.add("aberto") : t.classList.add("fechado") }(), async function () { const t = await fetch("./AnimaisApi.json"); (await t.json()).forEach((t => function (t) { const e = document.createElement("div"), o = document.querySelector(".numeros-grid"); e.classList.add("numero-animal"), e.innerHTML = `<h3>${t.especie}</h3> \n  <span>${t.total}</span> `, o.appendChild(e) }(t))) }() })();
